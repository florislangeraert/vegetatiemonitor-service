swagger: "2.0"
basePath: "/"

schemes:
  - http
  - https

definitions:
  ImageBands:
    type: array
    items:
      type: string
      enum:
        - red
        - green
        - blue
        - nir
        - swir
    minItems: 3
    maxItems: 3
    example: red,green,blue

  MapId:
    type: string
    enum:
      - satellite
      - ndvi
      - landuse
      - landuse-vs-legger

  MapUri:
    properties:
      id:
        type: string
      token:
        type: string
    example:
      {
        "url": "https://earthengine.googleapis.com/map/03d64f27b85612c8f9992e05f110b8b5/{z}/{x}/{y}?token=4a7cd96a32cf56066e34fb155d40f284"
      }

  MapFilter:
    type: object
    required:
      - region
    example:
      {
        "dateBegin": "2016-01-01",
        "dateEnd": "2016-02-01",
        "bands": ["red", "green", "blue"],
        "region": {
          "geodesic": true,
          "type": "Polygon",
          "coordinates": [[
            [5.846,51.984],
            [5.849,51.961],
            [5.910,51.960],
            [5.916,51.985],
            [5.877,51.990],
            [5.846,51.984]
          ]]
        }
      }
    properties:
      region:
        type: string
      dateBegin:
        type: string
        format: date-time
      dateEnd:
        type: string
        format: date-time
      bands:
        schema:
          $ref: "#/definitions/ImageBands"

info:
  description: Queries satellite images, spectral indices, and classifications from Google Earth Engine
  title: Vegetatie Monitor API
  version: "1.0.0"

paths:
  /map/{id}/:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      description: Returns image uri (map) processed by Google Earth Engine
      operationId: getMap
      parameters:
        - in: path
          name: id
          required: true
          default: 'satellite'
          schema:
            $ref: "#/definitions/MapId"
        - in: body
          name: body
          description: The filter for map request
          schema:
            $ref: "#/definitions/MapFilter"
      responses:
        200:
          description: Image tile url
          schema:
            "$ref": "#/definitions/MapUri"

  /image/:
    get:
      produces:
        - application/json
      description: Gets image by image id
      operationId: getImageById
      parameters:
        - in: query
          name: id
          required: true
          type: string
          example: COPERNICUS/S2/20160102T110129_20160102T144623_T31UGT
        - in: query
          name: bands
          required: true
          default: swir,nir,green
          schema:
            $ref: "#/definitions/ImageBands"
      responses:
        200:
          description: Image tile url
          schema:
            "$ref": "#/definitions/MapUri"

  /map/{id}/times/:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      description: For a given region and start/end times, ids and time stamps for all available images
      operationId: getImageTimes
      parameters:
        - in: path
          name: id
          required: true
          default: 'satellite'
          schema:
            $ref: "#/definitions/MapId"
        - in: body
          name: body
          description: The filter for map request
          schema:
              $ref: "#/definitions/MapFilter"
      responses:
        200:
          description: Array of image times and image infos
          examples:
            {
              "image_ids": [
                "COPERNICUS/S2/20160102T110129_20160102T144623_T31UFT",
                "COPERNICUS/S2/20160102T110129_20160102T144623_T31UGT",
                "COPERNICUS/S2/20160112T110648_20160112T162938_T31UFT",
              ],
              "image_times": [
                "2016-01-02 11:01",
                "2016-01-02 11:01",
                "2016-01-12 11:06",
              ]
            }
          schema:
            "$ref": "#/definitions/MapUri"
